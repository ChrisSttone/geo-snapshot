{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ameen\\\\ai-geosnapshot\\\\geosnapshot-front\\\\src\\\\CutoutUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flaskURL = 'http://localhost:5001';\nfunction CutoutUploader() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [cutouts, setCutouts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleUpload = async () => {\n    if (!file) return;\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      const res = await axios.post(`${flaskURL}/cutout-people`, formData);\n      setCutouts(res.data.cutouts || []);\n    } catch (err) {\n      alert(\"Cutout failed.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Group Photo Cutout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      style: {\n        marginLeft: '1rem'\n      },\n      children: loading ? \"Processing...\" : \"Upload & Cutout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '2rem',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n      },\n      children: cutouts.map((url, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${flaskURL}${url}`,\n          alt: `cutout-${i}`,\n          width: \"150\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `${flaskURL}${url}`,\n          download: true,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CutoutUploader, \"s8nXM4L81cmZXmYaiJuR2qSTr5g=\");\n_c = CutoutUploader;\nexport default CutoutUploader;\nvar _c;\n$RefreshReg$(_c, \"CutoutUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","flaskURL","CutoutUploader","_s","file","setFile","cutouts","setCutouts","loading","setLoading","handleUpload","formData","FormData","append","res","post","data","err","alert","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","disabled","marginLeft","marginTop","display","flexWrap","justifyContent","map","url","i","margin","src","alt","width","href","download","_c","$RefreshReg$"],"sources":["C:/Users/Ameen/ai-geosnapshot/geosnapshot-front/src/CutoutUploader.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst flaskURL = 'http://localhost:5001';\r\n\r\nfunction CutoutUploader() {\r\n  const [file, setFile] = useState(null);\r\n  const [cutouts, setCutouts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    try {\r\n  const res = await axios.post(`${flaskURL}/cutout-people`, formData);\r\n  setCutouts(res.data.cutouts || []);\r\n} catch (err) {\r\n  alert(\"Cutout failed.\");\r\n}\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '2rem' }}>\r\n      <h2>Group Photo Cutout</h2>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <button onClick={handleUpload} disabled={loading} style={{ marginLeft: '1rem' }}>\r\n        {loading ? \"Processing...\" : \"Upload & Cutout\"}\r\n      </button>\r\n\r\n      <div style={{ marginTop: '2rem', display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        {cutouts.map((url, i) => (\r\n          <div key={i} style={{ margin: '1rem' }}>\r\n            <img src={`${flaskURL}${url}`} alt={`cutout-${i}`} width=\"150\" />\r\n            <br />\r\n            <a href={`${flaskURL}${url}`} download>\r\n              <button>Download</button>\r\n            </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CutoutUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}